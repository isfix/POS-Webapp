// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview AI-driven analysis tool that proactively analyzes Firestore data for financial abnormalities.
 *
 * - analyzeFinancialData - Analyzes financial data and triggers alerts for abnormalities.
 * - FinancialDataAnalysisInput - The input type for the analyzeFinancialData function.
 * - FinancialDataAnalysisOutput - The return type for the analyzeFinancialData function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FinancialDataAnalysisInputSchema = z.object({
  salesData: z.string().describe('Sales data from Firestore.'),
  expensesData: z.string().describe('Expenses data from Firestore.'),
  marketTrends: z.string().describe('Market trends data.'),
});
export type FinancialDataAnalysisInput = z.infer<typeof FinancialDataAnalysisInputSchema>;

const FinancialDataAnalysisOutputSchema = z.object({
  insights: z.string().describe('Insights on financial data abnormalities.'),
  alerts: z.string().describe('Alerts triggered by financial abnormalities.'),
});
export type FinancialDataAnalysisOutput = z.infer<typeof FinancialDataAnalysisOutputSchema>;

export async function analyzeFinancialData(input: FinancialDataAnalysisInput): Promise<FinancialDataAnalysisOutput> {
  return analyzeFinancialDataFlow(input);
}

const prompt = ai.definePrompt({
  name: 'financialDataAnalysisPrompt',
  input: {schema: FinancialDataAnalysisInputSchema},
  output: {schema: FinancialDataAnalysisOutputSchema},
  prompt: `You are an AI-driven financial analyst that analyzes real-time Firestore data for abnormalities.

Analyze the provided sales data, expenses data, and market trends to identify any financial abnormalities.

Sales Data: {{{salesData}}}
Expenses Data: {{{expensesData}}}
Market Trends: {{{marketTrends}}}

Based on your analysis, provide insights on any identified abnormalities and trigger alerts for significant issues.

Insights:
Alerts: `,
});

const analyzeFinancialDataFlow = ai.defineFlow(
  {
    name: 'analyzeFinancialDataFlow',
    inputSchema: FinancialDataAnalysisInputSchema,
    outputSchema: FinancialDataAnalysisOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
